// <auto-generated />
using System;
using CarParkSystem.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ParkingSystem.Core.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20210714182223_CarParkSystemMigration")]
    partial class CarParkSystemMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarParkSystem.DbEntities.ParkedVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ParkingAreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeArrived")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleRegistrationNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ParkingAreaId");

                    b.HasIndex("VehicleRegistrationNumber");

                    b.ToTable("ParkedVehicles");
                });

            modelBuilder.Entity("CarParkSystem.DbEntities.ParkingArea", b =>
                {
                    b.Property<int>("ParkingAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfSpaces")
                        .HasColumnType("int");

                    b.HasKey("ParkingAreaId");

                    b.ToTable("ParkingAreas");

                    b.HasData(
                        new
                        {
                            ParkingAreaId = 1,
                            NumberOfSpaces = 10
                        },
                        new
                        {
                            ParkingAreaId = 2,
                            NumberOfSpaces = 15
                        },
                        new
                        {
                            ParkingAreaId = 3,
                            NumberOfSpaces = 8
                        });
                });

            modelBuilder.Entity("CarParkSystem.DbEntities.Vehicle", b =>
                {
                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfPurchase")
                        .HasColumnType("datetime2");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParkingAreaId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationNumber");

                    b.HasIndex("ParkingAreaId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CarParkSystem.DbEntities.ParkedVehicle", b =>
                {
                    b.HasOne("CarParkSystem.DbEntities.ParkingArea", "ParkingArea")
                        .WithMany()
                        .HasForeignKey("ParkingAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarParkSystem.DbEntities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleRegistrationNumber");

                    b.Navigation("ParkingArea");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CarParkSystem.DbEntities.Vehicle", b =>
                {
                    b.HasOne("CarParkSystem.DbEntities.ParkingArea", "ParkingArea")
                        .WithMany()
                        .HasForeignKey("ParkingAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParkingArea");
                });
#pragma warning restore 612, 618
        }
    }
}
